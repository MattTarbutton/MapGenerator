<Window x:Class="MapGenerator.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:MapGenerator"
        xmlns:wpg="clr-namespace:System.Windows.Controls"
        mc:Ignorable="d"
        Title="MainWindow" Height="575" Width="800" MinHeight="575" MinWidth="600" WindowStyle="ToolWindow" Closing="Window_Closing" SizeChanged="Window_SizeChanged">
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="275"/>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition x:Name="PropertyWindowColumn" Width="200"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="*"/>
            <RowDefinition Height="50"/>
        </Grid.RowDefinitions>
        <StackPanel Orientation="Vertical">
            <GroupBox Header="Randomizer" Margin="0,0,5,0">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="50"/>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>
                    <TextBlock Margin="0,2,0,0">Seed:</TextBlock>
                    <StackPanel Grid.Column="1" Orientation="Horizontal" HorizontalAlignment="Right">
                        <Button x:Name="RandomizeButton" Grid.Column="1" Height="19" Margin="0,0,5,0" Click="RandomizeButton_Click">
                            <Image Source="Resources/SmallDieCast.png"/>
                        </Button>
                        <TextBox Grid.Column="1" Width="100" x:Name="SeedTextBox" TabIndex="1" TextAlignment="Right" HorizontalAlignment="Right" TextChanged="SeedTextBox_TextChanged" GotKeyboardFocus="SeedTextBox_GotKeyboardFocus" ToolTip="Seed used by the random number generator." />
                    </StackPanel>
                </Grid>
            </GroupBox>
            <GroupBox Header="Map Type" Margin="0,0,5,0">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="75"/>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>
                    <StackPanel Orientation="Vertical">
                        <TextBlock Margin="0,4,0,0">Map Type:</TextBlock>
                        <TextBlock x:Name="MazeRowsTextBlock" Margin="0,2,0,0">Rows:</TextBlock>
                        <TextBlock x:Name="MazeColumnsTextBlock" Margin="0,2,0,0">Columns:</TextBlock>
                        <TextBlock x:Name="PathWidthTextBlock" Margin="0,2,0,0">Path Width:</TextBlock>
                    </StackPanel>
                    <StackPanel Grid.Column="1" Orientation="Vertical">
                        <ComboBox Width="100" x:Name="MapTypeComboBox" TabIndex="2" HorizontalAlignment="Right"
                                  SelectedValue="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=local:MainWindow}, Path=SelectedMapType, Mode=TwoWay}"
                                  ItemsSource="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=local:MainWindow}, Path=MapTypes}" 
                                  SelectionChanged="MapTypeComboBox_SelectionChanged"/>
                        <TextBox Width="100" x:Name="MazeRowsTextBox" TabIndex="3" TextAlignment="Right" HorizontalAlignment="Right" TextChanged="MazeRowsTextBox_TextChanged" GotKeyboardFocus="MazeRowsTextBox_GotKeyboardFocus" ToolTip="Number of rows in the maze." />
                        <TextBox Width="100" x:Name="MazeColumnsTextBox" TabIndex="4" TextAlignment="Right" HorizontalAlignment="Right" TextChanged="MazeColumnsTextBox_TextChanged" GotKeyboardFocus="MazeColumnsTextBox_GotKeyboardFocus" ToolTip="Number of columns in the maze." />
                        <TextBox Width="100" x:Name="PathWidthTextBox" TabIndex="5" TextAlignment="Right" HorizontalAlignment="Right" TextChanged="PathWidthTextBox_TextChanged" GotKeyboardFocus="PathWidthTextBox_GotKeyboardFocus" ToolTip="The relative width of the path in the maze." />
                    </StackPanel>
                </Grid>
            </GroupBox>
            <GroupBox Header="Cellular Automata" Margin="0,0,5,0">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="150"/>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>
                    <StackPanel Orientation="Vertical">
                        <TextBlock Margin="0,2,0,0">Birth Limit:</TextBlock>
                        <TextBlock Margin="0,2,0,0">Death Limit:</TextBlock>
                        <TextBlock Margin="0,2,0,0">Path Start Seeded Percent:</TextBlock>
                        <TextBlock Margin="0,2,0,0">Simulation Steps:</TextBlock>
                    </StackPanel>
                    <StackPanel Grid.Column="1" Orientation="Vertical">
                        <TextBox Width="100" x:Name="BirthLimitTextBox" TabIndex="6" TextAlignment="Right" HorizontalAlignment="Right" TextChanged="BirthLimitTextBox_TextChanged" GotKeyboardFocus="BirthLimitTextBox_GotKeyboardFocus" ToolTip="How many neighbor cells must be alive to cause the cell to become alive. Always greater than death limit. Min 2 Max 5." />
                        <!--<Slider Width="100" x:Name="BirthLimitSlider" TickPlacement="BottomRight" Maximum="5" Minimum="2" IsSnapToTickEnabled="True" />-->
                        <TextBox Width="100" x:Name="DeathLimitTextBox" TabIndex="7" TextAlignment="Right" HorizontalAlignment="Right" TextChanged="DeathLimitTextBox_TextChanged" GotKeyboardFocus="DeathLimitTextBox_GotKeyboardFocus" ToolTip="How few neighbor cells must be alive to cause the cell to die. Always less than birth limit. Min 1 Max 3." />
                        <!--<Slider Width="100" x:Name="DeathLimitSlider" TickPlacement="BottomRight" Maximum="3" Minimum="1" IsSnapToTickEnabled="True"/>-->
                        <TextBox Width="100" x:Name="ChanceToStartAliveTextBox" TabIndex="8" TextAlignment="Right" HorizontalAlignment="Right" TextChanged="ChanceToStartAliveTextBox_TextChanged" GotKeyboardFocus="ChanceToStartAliveTextBox_GotKeyboardFocus" ToolTip="Percentage of cells along the path that start alive. Smaller values give more irregular shapes. Sweet spot is 30-50. Min 10 Max 70." />
                        <TextBox Width="100" x:Name="SimStepsTextBox" TabIndex="9" TextAlignment="Right" HorizontalAlignment="Right" TextChanged="SimStepsTextBox_TextChanged" GotKeyboardFocus="SimStepsTextBox_GotKeyboardFocus" ToolTip="How many cellular automata steps to run. Smaller values give more irregular shapes. Min 1 Max 10." />
                    </StackPanel>
                </Grid>
            </GroupBox>
            <GroupBox Header="Map Size" Margin="0,0,5,0">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="75"/>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>
                    <StackPanel Orientation="Vertical">
                        <TextBlock Margin="0,2,0,0">Map Width:</TextBlock>
                        <TextBlock Margin="0,2,0,0">Map Height:</TextBlock>
                    </StackPanel>
                    <StackPanel Grid.Column="1" Orientation="Vertical">
                        <TextBox Width="100" x:Name="MapWidthTextBox" TabIndex="10" TextAlignment="Right" HorizontalAlignment="Right" TextChanged="MapWidthTextBox_TextChanged" GotKeyboardFocus="MapWidthTextBox_GotKeyboardFocus" ToolTip="Width of the map in cellular automata cells." />
                        <TextBox Width="100" x:Name="MapHeightTextBox" TabIndex="11" TextAlignment="Right" HorizontalAlignment="Right" TextChanged="MapHeightTextBox_TextChanged" GotKeyboardFocus="MapHeightTextBox_GotKeyboardFocus" ToolTip="Height of the map in cellular automata cells." />
                    </StackPanel>
                </Grid>
            </GroupBox>
            <GroupBox Header="Image" Margin="0,0,5,0">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="140"/>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>
                    <StackPanel Orientation="Vertical">
                        <TextBlock Margin="0,2,0,0">Line Size:</TextBlock>
                        <TextBlock Margin="0,2,0,0">Size Multiplier:</TextBlock>
                        <TextBlock Margin="0,2,0,0">Image Width:</TextBlock>
                        <TextBlock Margin="0,2,0,0">Image Height:</TextBlock>
                        <TextBlock x:Name="WallDecalSizeTextBlock" Margin="0,2,0,0">Wall Decal Size:</TextBlock>
                        <CheckBox x:Name="DrawSmoothCheckBox" Margin="0,2,0,0" TabIndex="14" Content="Smooth Lines" Click="DrawSmoothCheckBox_Click" IsChecked="True"/>
                        <CheckBox x:Name="DrawGridLinesCheckBox" Margin="0,2,0,0" TabIndex="17" Content="Draw Grid Lines" Click="DrawGridLinesCheckBox_Click" IsChecked="True"/>
                        <TextBlock x:Name="GridCellWidthTextBlock" Margin="0,2,0,0">Grid Cell Width:</TextBlock>
                        <TextBlock x:Name="GridCellHeightTextBlock" Margin="0,2,0,0">Grid Cell Height:</TextBlock>
                    </StackPanel>
                    <StackPanel Grid.Column="1" Orientation="Vertical">
                        <TextBox Width="100" x:Name="LineSizeTextBox" TabIndex="12" TextAlignment="Right" HorizontalAlignment="Right" TextChanged="LineSizeTextBox_TextChanged" GotKeyboardFocus="LineSizeTextBox_GotKeyboardFocus" ToolTip="Thickness of the wall lines."/>
                        <TextBox Width="100" x:Name="SizeMultiplierTextBox" TabIndex="13" TextAlignment="Right" HorizontalAlignment="Right" TextChanged="SizeMultiplierTextBox_TextChanged" GotKeyboardFocus="SizeMultiplierTextBox_GotKeyboardFocus" ToolTip="Determines overall size of the image. Image size is multiplier times map width and height." />
                        <TextBlock Width="100" x:Name="ImageWidthTextBox" Margin="0,2,0,0" TextAlignment="Right" HorizontalAlignment="Right"/>
                        <TextBlock Width="100" x:Name="ImageHeightTextBox" Margin="0,2,0,0" TextAlignment="Right" HorizontalAlignment="Right"/>
                        <TextBox Width="100" x:Name="WallDecalSizeTextBox" Margin="0,0,0,0" TabIndex="15" TextAlignment="Right" HorizontalAlignment="Right" TextChanged="WallDecalSizeTextBox_TextChanged" GotKeyboardFocus="WallDecalSizeTextBox_GotKeyboardFocus" />
                        <TextBox Width="100" x:Name="GridCellWidthTextBox" Margin="0,34,0,0" TabIndex="18" TextAlignment="Right" HorizontalAlignment="Right" TextChanged="GridCellWidthTextBox_TextChanged" GotKeyboardFocus="GridCellWidthTextBox_GotKeyboardFocus" />
                        <TextBox Width="100" x:Name="GridCellHeightTextBox" TabIndex="19" TextAlignment="Right" HorizontalAlignment="Right" TextChanged="GridCellHeightTextBox_TextChanged" GotKeyboardFocus="GridCellHeightTextBox_GotKeyboardFocus" />
                    </StackPanel>
                </Grid>
            </GroupBox>
        </StackPanel>
        <StackPanel Grid.Row ="1" Orientation="Horizontal" HorizontalAlignment="Right" VerticalAlignment="Bottom" Margin="0,0,10,10">
            <Button x:Name="RestoreDefaultsButton" Margin="0,0,5,0" TabIndex="18" Width="100" Height="20" Content="Restore Defaults" HorizontalAlignment="Right" VerticalAlignment="Bottom" Click="RestoreDefaultsButton_Click"/>
            
        </StackPanel>
        <Border Grid.RowSpan="2" HorizontalAlignment="Right" BorderThickness="0,0,1,0">
            <Border.BorderBrush>
                <SolidColorBrush Color="{DynamicResource {x:Static SystemColors.ActiveBorderColorKey}}"/>
            </Border.BorderBrush>
        </Border>
        <ScrollViewer x:Name="MapScrollViewer" Grid.Column="1" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden" Focusable="False">
            <Canvas x:Name="MapCanvas" Width="Auto" Height="Auto" SizeChanged="MapCanvas_SizeChanged" MouseMove="MapCanvas_MouseMove" MouseDown="MapCanvas_MouseDown" MouseLeftButtonUp="MapCanvas_MouseLeftButtonUp" KeyDown="MapCanvas_KeyDown" Focusable="True">
                <Canvas.Background>
                    <VisualBrush Stretch="Uniform"  >
                        <VisualBrush.Visual>
                            <Image x:Name="MapImage" HorizontalAlignment="Right" VerticalAlignment="Top" SizeChanged="MapImage_SizeChanged"/>
                        </VisualBrush.Visual>
                    </VisualBrush>
                </Canvas.Background>
                <Canvas.ContextMenu>
                    <ContextMenu x:Name="AddNodeContextMenu">
                        <MenuItem x:Name="AddNodeMenuItem" Header="Add Node" Click="AddNodeMenuItem_Click"/>
                    </ContextMenu>
                </Canvas.ContextMenu>
                <!--<local:MapNodeControl x:Name="testControl" Width="20" Height="20"/>-->
            </Canvas>
            <!--<Canvas x:Name="MapCanvas" Width="Auto" Height="Auto" >
                <Canvas.Background>
                    <VisualBrush Stretch="Uniform"  >
                        <VisualBrush.Visual>
                            <Image x:Name="MapImage" HorizontalAlignment="Right" VerticalAlignment="Top"/>
                        </VisualBrush.Visual>
                    </VisualBrush>
                </Canvas.Background>
                <local:MapNodeControl x:Name="testControl" Width="20" Height="20"/>
            </Canvas>-->
        </ScrollViewer>
        <CheckBox x:Name="ZoomToFitCheckBox" Grid.Column="1" Grid.ColumnSpan="2" Grid.Row="1" Margin="5,5,5,0" TabIndex="19" HorizontalAlignment="Right" VerticalAlignment="Top" IsChecked="True" Click="ZoomToFitCheckBox_Click">Zoom to Fit</CheckBox>
        <Button x:Name="SaveButton" Grid.Column="1" Grid.ColumnSpan="2" Grid.Row="1" Width="100" Height="20" TabIndex="20" HorizontalAlignment="Right" VerticalAlignment="Bottom" Margin="0,0,5,5" Click="SaveButton_Click">
            <StackPanel Orientation="Horizontal">
                <Image Source="Resources/SaveStatusBar1_16x.png" Margin="0,0,5,0"></Image>
                <TextBlock>Save Image</TextBlock>
            </StackPanel>
        </Button>
        <!--<Line Grid.Column="2" Stroke="Gray" Stretch="Fill" HorizontalAlignment="Left" Y2="1" StrokeThickness="1"></Line>-->
        <Border Grid.Column="2" HorizontalAlignment="Left" BorderThickness="0,0,1,0">
            <Border.BorderBrush>
                <SolidColorBrush Color="{DynamicResource {x:Static SystemColors.ActiveBorderColorKey}}"/>
            </Border.BorderBrush>
        </Border>
        <TextBlock Grid.Column="2" Margin="10,10,10,0" Width="170" TextWrapping="Wrap">Right click in the grid to add nodes, right click on nodes to add connections to nodes.</TextBlock>
        <wpg:WpfPropertyGrid x:Name="PropertyGrid1" Grid.Column="2" Height="300"
        Margin="0,0,0,0" HorizontalAlignment="Stretch" VerticalAlignment="Bottom" 
        HelpVisible="True" 
        ToolbarVisible="False"
        PropertySort="Categorized" />
    </Grid>
</Window>
